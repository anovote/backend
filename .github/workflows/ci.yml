name: CI

on:
  push:
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres
        env:
          POSTGRES_DB: ${{secrets.DB_TEST_DATABASE}}
          POSTGRES_USER: ${{secrets.DB_TEST_USER}}
          POSTGRES_PASSWORD: ${{secrets.DB_TEST_PASSWORD}}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "15.8"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Set yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn
      - name: Run test
        env:
          SECRET: ${{secrets.SECRET_TEST}}
          HTTP_POST: ${{secrets.HTTP_PORT_TEST}}
          POSTGRES_PASSWORD: ${{secrets.DB_TEST_PASSWORD}}
          POSTGRES_USER: ${{secrets.DB_TEST_USER}}
          POSTGRES_DB: ${{secrets.DB_TEST_DATABASE}}
          DB_PORT: ${{secrets.DB_TEST_PORT}}
          DB_HOST: ${{secrets.DB_TEST_HOST}}
        run: yarn run test
      - name: Build project
        run: yarn run build
